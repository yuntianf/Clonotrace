% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label_propagation.R
\name{label_spreading}
\alias{label_spreading}
\title{label_spreading}
\usage{
label_spreading(
  adj,
  labels,
  label_n = NULL,
  alpha = 0.9,
  max_iter = 100,
  tol = 0.001,
  epsilon = 0,
  verbose = TRUE
)
}
\arguments{
\item{adj}{A square adjacency matrix (preferably sparse) representing the graph.}

\item{labels}{An integer vector of length equal to the number of nodes. Use `NA` for unlabeled entries.}

\item{label_n}{Optional. The number of label classes. If `NULL`, inferred as `max(labels, na.rm = TRUE)`.}

\item{alpha}{Float in (0, 1). The propagation coefficient controlling the balance between prior and propagated labels (default: 0.9).}

\item{max_iter}{Maximum number of iterations for propagation (default: 100).}

\item{tol}{Convergence threshold (default: 1e-3).}

\item{epsilon}{Small prior assigned to unlabeled entries (default: 0).}

\item{verbose}{Logical. Whether to print progress and convergence status (default: TRUE).}
}
\value{
A matrix of size N x C where each row contains soft label probabilities for a node across `C` classes.
}
\description{
Label Propagation via Iterative Graph-Based Spreading
}
\details{
Performs semi-supervised label propagation over a graph using a sparse or dense adjacency matrix.
The algorithm propagates known labels across the graph structure, allowing soft label assignment
for unlabeled nodes.
}
\examples{
\dontrun{
set.seed(1)
adj <- Matrix::rsparsematrix(100, 100, density = 0.05)
labels <- rep(NA, 100)
labels[1:10] <- sample(1:3, 10, replace = TRUE)
prob_matrix <- label_spreading(adj, labels)
}
}
