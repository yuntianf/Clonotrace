% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxiliary.R
\name{compute_transition}
\alias{compute_transition}
\title{compute_transition}
\usage{
compute_transition(connectivity)
}
\arguments{
\item{connectivity}{A symmetric numeric or sparse matrix representing pairwise affinities (e.g., k-NN graph).}
}
\value{
A symmetric matrix representing the normalized transition matrix.
}
\description{
Compute Normalized Transition Matrix from Connectivity Matrix
}
\details{
Converts a symmetric connectivity matrix into a double-normalized transition matrix suitable for diffusion-based analyses.
The output matrix is scaled such that it preserves local affinities and is symmetric with unit row and column scaling.

The transition matrix is computed as:
\deqn{T = Z D^{-1} A D^{-1} Z}
where \eqn{A} is the input matrix, \eqn{D} is the row sum diagonal matrix, and \eqn{Z} rescales the result for symmetry.
}
\examples{
library(Matrix)
mat <- Matrix::rsparsematrix(5, 5, density = 0.6)
mat <- 0.5 * (mat + t(mat))  # ensure symmetry
trans <- compute_transition(mat)
print(trans)

}
